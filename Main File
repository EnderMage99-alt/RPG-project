function setup() {
  createCanvas(600, 400);
}


var player_HP = 100
var player_max_HP = 100
var foe_HP = 200
var foe_max_HP = 200
var foe_turn = false
var player_block = false



var player_hb_x = 400
var player_hb_x_target = 400
var foe_hb_x = 500
var foe_hb_x_target = 500

var decrease_speed = 5

var atk_but = true
var atk_but_x = 150
var atk_but_y = 240
var atk_but_w = 75
var atk_but_h = 50

var blo_but = true
var blo_but_x = 250
var blo_but_y = 240
var blo_but_w = 75
var blo_but_h = 50

var ex_atk_but = true
var ex_atk_but_x = 350
var ex_atk_but_y = 240
var ex_atk_but_w = 75
var ex_atk_but_h = 50

function draw() {
  background(220);
  fill(255, 0, 0);
  rect(50, 25, 500, 30); //Foe HP bar
  rect(100, 300, 400, 30); //Player HP bar
  fill(52, 183, 235);
  rect(100, 330, 400, 30); //Player MANA bar
  update_player_HP();
  update_foe_HP();
  if((player_hb_x == player_hb_x_target) && (foe_hb_x == foe_hb_x_target) && (!foe_turn)){
    attack_button();
    block_button();
    ex_attack_button();
    if(mouseIsPressed) {
      if(mouseX > atk_but_x && mouseX < atk_but_x + atk_but_w && 
         mouseY > atk_but_y && mouseY < atk_but_y + atk_but_h){
          press_atk();
      }
    }
    if(mouseIsPressed) {
      if(mouseX > blo_but_x && mouseX < blo_but_x + blo_but_w && 
         mouseY > blo_but_y && mouseY < blo_but_y + blo_but_h){
          press_atk();
      }
    }
    if(mouseIsPressed) {
      if(mouseX > ex_atk_but_x && mouseX < ex_atk_but_x + ex_atk_but_w && 
         mouseY > ex_atk_but_y && mouseY < ex_atk_but_y + ex_atk_but_h){
          press_atk();
      }
    }
  }
}















//Player HP functions
function player_hurt(amount){
  if(player_hb_x != player_hb_x_target){
    return 
  }
  
  player_HP -= amount;
  if(player_HP < 0){
    player_HP = 0;
  }
  console.log('Player HP ' + player_HP);
  let HP_percentage = (player_HP / player_max_HP);
  console.log('HP_percentage = ' + HP_percentage);
  player_hb_x_target = ((player_hb_x_target - 100) * HP_percentage);
  if(HP_percentage != 0){
    player_hb_x_target += 100;
  }    
  update_player_HP();
}

function update_player_HP(){
  fill(0, 255, 0);
  if(player_hb_x != player_hb_x_target){
    if(player_hb_x > player_hb_x_target){
      player_hb_x -= decrease_speed; 
    } else if(player_hb_x < player_hb_x_target) {
      player_hb_x += decrease_speed;
    }    
  }
  if(abs(player_hb_x_target - player_hb_x) <= 60){
       decrease_speed = 1;
     } else if(abs(player_hb_x_target - player_hb_x) <= 200) {
       decrease_speed = 2;
     } else {
       decrease_speed = 3;
     }
  
  if(abs(player_hb_x_target - player_hb_x) < 1){
    player_hb_x = player_hb_x_target;
  }
  rect(100, 300, player_hb_x, 30); //Player HP bar
}

  
  
  
  
  
  
  
  
  
  
  
//Foe HP functions
function foe_hurt(amount){
  if(foe_hb_x != foe_hb_x_target){
    return 
  }
  
  foe_HP -= amount;
  if(foe_HP < 0){
    foe_HP = 0;
  }
  console.log('Foe HP ' + foe_HP);
  let HP_percentage = (foe_HP / foe_max_HP);
  console.log('HP_percentage = ' + HP_percentage);
  foe_hb_x_target = ((foe_hb_x_target - 50) * HP_percentage);
  if(HP_percentage != 0){
    foe_hb_x_target += 50;
  }
    
  update_foe_HP();
}

function update_foe_HP(){
  fill(0, 255, 0);
  if(foe_hb_x != foe_hb_x_target){
    if(foe_hb_x > foe_hb_x_target){
      foe_hb_x -= decrease_speed; 
    } else if(foe_hb_x < foe_hb_x_target) {
      foe_hb_x += decrease_speed;
    }    
  }
  if(abs(foe_hb_x_target - foe_hb_x) <= 60){
       decrease_speed = 1;
     } else if(abs(foe_hb_x_target - foe_hb_x) <= 200) {
       decrease_speed = 2;
     } else {
       decrease_speed = 3;
     }
  
  if(abs(foe_hb_x_target - foe_hb_x) < 1){
    foe_hb_x = foe_hb_x_target;
  }
  
  rect(50, 25, foe_hb_x, 30); //Foe HP bar
  }


  
  
  
  
  
  
//Buttons
function press_atk(){
  foe_hurt(41);
}

function press_blo(){
  foe_hurt(41);
}

function press_ex_atk(){
  foe_hurt(41);
}
  
function attack_button(){
  fill(247, 140, 126);
  rect(atk_but_x, atk_but_y, atk_but_w, atk_but_h, 20);
  fill(0, 0, 0);
  textSize(18);
  text('Attack', atk_but_x + 10, atk_but_y + 30);
  atk_but = true
}
  
function block_button(){
  fill(115, 217, 235);
  rect(blo_but_x, blo_but_y, blo_but_w, blo_but_h, 20);
  fill(0, 0, 0);
  textSize(18);
  text('Block', blo_but_x + 10, blo_but_y + 30);
  blo_but = true
}

function ex_attack_button(){
  fill(231, 232, 146);
  rect(ex_atk_but_x, ex_atk_but_y, ex_atk_but_w, ex_atk_but_h, 20);
  fill(0, 0, 0);
  textSize(14);
  text('EX Attack', ex_atk_but_x + 5, ex_atk_but_y + 30);
  ex_atk_but = true
}
